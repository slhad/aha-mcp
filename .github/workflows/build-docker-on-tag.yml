name: Build Docker on Tag

on:
  push:
    tags:
      - '*'

jobs:
  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract tag name
        id: extract_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Build Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}:$TAG
          docker build -t $IMAGE_NAME .
      - name: Push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}:$TAG
          docker push $IMAGE_NAME

      - name: Install semver for tag comparison
        run: npm install semver

      - name: Check if tag is latest
        id: is_latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          TAG: ${{ env.TAG }}
        run: |
          node .github/workflows/is-latest-tag.js
        continue-on-error: true

      - name: Tag and push as latest if this is the highest version
        if: steps.is_latest.outcome == 'success'
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}:$TAG
          LATEST_IMAGE=ghcr.io/${{ github.repository }}:latest
          docker tag $IMAGE_NAME $LATEST_IMAGE
          docker push $LATEST_IMAGE
